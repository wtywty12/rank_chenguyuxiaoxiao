{"version":3,"sources":["ConfigManager.js"],"names":["Object","defineProperty","exports","value","StringUtils_1","require","ConfigManagerClass","get","_instance","enumerable","configurable","prototype","load","Promise","fulfill","reject","cc","loader","loadResDir","error","datas","urls","i","length","name_1","StringUtils","getName","data","ConfigManager","instance"],"mappings":";;;;AAAA;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAIC,gBAAgBC,QAAQ,8BAAR,CAApB;AACA,IAAIC,qBAAsB,YAAY;AAClC,aAASA,kBAAT,GAA8B,CAC7B;AACDN,WAAOC,cAAP,CAAsBK,kBAAtB,EAA0C,UAA1C,EAAsD;AAClDC,aAAK,eAAY;AACb,gBAAI,KAAKC,SAAL,IAAkB,IAAtB,EAA4B;AACxB,qBAAKA,SAAL,GAAiB,IAAIF,kBAAJ,EAAjB;AACH;AACD,mBAAO,KAAKE,SAAZ;AACH,SANiD;AAOlDC,oBAAY,IAPsC;AAQlDC,sBAAc;AARoC,KAAtD;AAUAJ,uBAAmBK,SAAnB,CAA6BC,IAA7B,GAAoC,YAAY;AAC5C,eAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1CC,eAAGC,MAAH,CAAUC,UAAV,CAAqB,OAArB,EAA8B,UAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8B;AACxD,oBAAIF,KAAJ,EAAW;AACPH,uBAAGG,KAAH,CAASA,KAAT;AACA;AACH;AACD,qBAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC,wBAAIE,SAASpB,cAAcqB,WAAd,CAA0BC,OAA1B,CAAkCL,KAAKC,CAAL,CAAlC,CAAb;AACA,wBAAIK,OAAOP,MAAME,CAAN,CAAX;AACH;AACD,uBAAOR,SAAP;AACH,aAVD;AAWH,SAZM,CAAP;AAaH,KAdD;AAeA,WAAOR,kBAAP;AACH,CA7ByB,EAA1B;AA8BAJ,QAAQ0B,aAAR,GAAwBtB,mBAAmBuB,QAA3C","file":"ConfigManager.js","sourceRoot":"../../../../../../../../../assets/script/src/top/liubowen/game/common","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StringUtils_1 = require(\"../../core/utils/StringUtils\");\nvar ConfigManagerClass = (function () {\n    function ConfigManagerClass() {\n    }\n    Object.defineProperty(ConfigManagerClass, \"instance\", {\n        get: function () {\n            if (this._instance == null) {\n                this._instance = new ConfigManagerClass();\n            }\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ConfigManagerClass.prototype.load = function () {\n        return new Promise(function (fulfill, reject) {\n            cc.loader.loadResDir(\"jsons\", function (error, datas, urls) {\n                if (error) {\n                    cc.error(error);\n                    return;\n                }\n                for (var i = 0; i < datas.length; i++) {\n                    var name_1 = StringUtils_1.StringUtils.getName(urls[i]);\n                    var data = datas[i];\n                }\n                return fulfill();\n            });\n        });\n    };\n    return ConfigManagerClass;\n}());\nexports.ConfigManager = ConfigManagerClass.instance;\n"]}